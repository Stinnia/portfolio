section {
	margin: 50px;
}
.h2 {
	font-family: 'Gruppo', cursive;
	font-weight: 800;
}
.row {
	width: 700px;
	height: 400px;
	margin: 0 auto;
	box-shadow: 0 15px 40px rgba(0,0,0,.5);
}
.right {
	
	margin-top: 85px;
}
.right input {
	border: none;
	border-bottom: 1px solid #ccc;
	width: 100%;
}
.btn-primary {
	background-color: #425960;
	border: none;
	border-radius: 0;
}
.left input {
	border: 1px solid #ccc;
	height: 60%;
	width: 100%;
	margin: 10px; 
}
.left {
	background-image: url(../../assets/img/background.png);
	background-size: 150%;
	background-repeat: no-repeat;
    background-position: bottom left; 
	border-right: 1px grey solid;
}
.notes {
	background-color: rgba(0, 0, 0, 0);
    background-image: -webkit-linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0) 30px, #ccc 30px, #ccc 31px, rgba(0, 0, 0, 0) 31px);
    background-image: -moz-linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0) 30px, #ccc 30px, #ccc 31px, rgba(0, 0, 0, 0) 31px);
    background-image: -ms-linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0) 30px, #ccc 30px, #ccc 31px, rgba(0, 0, 0, 0) 31px);
    background-image: -o-linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0) 30px, #ccc 30px, #ccc 31px, rgba(0, 0, 0, 0) 31px);
    background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0) 30px, #ccc 30px, #ccc 31px, rgba(0, 0, 0, 0) 31px);
    background-size: 100% 31px;
	border: none;
    line-height: 31px;
    font-family: Arial, Helvetica, Sans-serif;
    padding: 8px;
	top: 20%;
	position: absolute;
    overflow: auto;
    outline: none;

    -webkit-box-shadow: none;
    -moz-box-shadow: none;
    box-shadow: none;
}



form {
  margin: 2em 0;
}
/**
* Make the field a flex-container, reverse the order so label is on top.
*/
 
.field {
  display: flex;
  flex-flow: column-reverse;
  margin-bottom: 1em;
}
/**
* Add a transition to the label and input.
* I'm not even sure that touch-action: manipulation works on
* inputs, but hey, it's new and cool and could remove the 
* pesky delay.
*/
label, input {
  transition: all 0.2s;
  touch-action: manipulation;
}

input {
  font-size: 1em;
  border: 0;
  border-bottom: 1px solid #ccc;
  font-family: inherit;
  -webkit-appearance: none;
  border-radius: 0;
  padding: 0;
  cursor: text;
}

input:focus {
  outline: 0;
  border-bottom: 1px solid #666;
}
input:-webkit-autofill,
input:-webkit-autofill:hover, 
input:-webkit-autofill:focus
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
  border: none;
  -webkit-text-fill-color: black;
  transition: background-color 5000s ease-in-out 0s;
}

label {
  text-transform: uppercase;
  letter-spacing: 0.05em;
}
/**
* Translate down and scale the label up to cover the placeholder,
* when following an input (with placeholder-shown support).
* Also make sure the label is only on one row, at max 2/3rds of the
* fieldâ€”to make sure it scales properly and doesn't wrap.
*/
input:placeholder-shown + label {
  cursor: text;
  max-width: 66.66%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  transform-origin: left bottom;
  transform: translate(0, 2.125rem) scale(1.5);
}
/**
* By default, the placeholder should be transparent. Also, it should 
* inherit the transition.
*/
::-webkit-input-placeholder {
  opacity: 0;
  transition: inherit;
}
/**
* Show the placeholder when the input is focused.
*/
input:focus::-webkit-input-placeholder {
  opacity: 1;
}
/**
* When the element is focused, remove the label transform.
* Also, do this when the placeholder is _not_ shown, i.e. when 
* there's something in the input at all.
*/
input:not(:placeholder-shown) + label,
input:focus + label {
  transform: translate(0, 0) scale(1);
  cursor: pointer;
}